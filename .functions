#!/usr/bin/env bash
#
# Functions
#
# @author Charlie Revett

# TODO: Automate this or get rid of it as rarely used.
# `asd` outputs all available functions from this file.
asd() {
  f=("branch" "gh" "generate-passphrase" "tre")
  printf '- %s\n' "${f[@]}"
}

# `branch` is used within a number of aliases, and returns the branch from the
# current git directory. Taken from oh-my-zsh.
# See: https://gist.github.com/DavidToca/3086571
branch() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo ${ref#refs/heads/}
}

# TODO: Fix so that `.git` is not URL suffix.
# `gh` opens the current repo in a browser.
gh() {
  open `git remote -v | grep fetch | awk '{print $2}' | sed 's/git@/http:\/\//' | sed 's/com:/com\//'`
}

# `generate-passphrase` generates a random passphrase based password.
generate-passphrase() {
  N=1
  if [ "$#" -eq 1 ]; then
    N=$1
  fi

  for (( i=1; i<=$N; i++ )); do
    gshuf -n4 /usr/share/dict/words | tr -s '\n' '-' | sed 's/.$//' | awk '{print tolower($0)}'
  done
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
tre() {
  tree -aC -I '.git|node_modules|.cache' --dirsfirst "$@" | less -FRNX;
}
