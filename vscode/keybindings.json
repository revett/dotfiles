[
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "enter",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "key": "shift+alt+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.addCommentLine",
    "key": "cmd+k cmd+c",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.addSelectionToNextFindMatch",
    "key": "cmd+d",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.autoFix",
    "key": "alt+cmd+.",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "command": "-references-view.showCallHierarchy",
    "key": "shift+alt+h",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "command": "-editor.action.cancelSelectionAnchor",
    "key": "escape",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "command": "-editor.action.changeAll",
    "key": "cmd+f2",
    "when": "editorTextFocus && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.editor.changeLanguageMode",
    "key": "cmd+k m",
    "when": "!notebookEditorFocused"
  },
  {
    "command": "-editor.debug.action.closeExceptionWidget",
    "key": "escape",
    "when": "exceptionWidgetVisible"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "cmd+w",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "command": "-editor.action.clipboardCopyAction",
    "key": "cmd+c"
  },
  {
    "command": "-editor.action.copyLinesDownAction",
    "key": "shift+alt+down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.copyLinesDownAction",
    "key": "shift+cmd+d",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.copyLinesUpAction",
    "key": "shift+alt+up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-cursorUndo",
    "key": "cmd+u",
    "when": "textInputFocus"
  },
  {
    "command": "-editor.action.clipboardCutAction",
    "key": "cmd+x"
  },
  {
    "command": "-workbench.action.debug.continue",
    "key": "f5",
    "when": "inDebugMode"
  },
  {
    "command": "-workbench.action.debug.disconnect",
    "key": "shift+f5",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "key": "shift+f9",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.debug.pause",
    "key": "f6",
    "when": "debugState == 'running'"
  },
  {
    "command": "-workbench.action.debug.restart",
    "key": "shift+cmd+f5",
    "when": "inDebugMode"
  },
  {
    "command": "-editor.debug.action.showDebugHover",
    "key": "cmd+k cmd+i",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "command": "-workbench.action.debug.start",
    "key": "f5",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "command": "-extension.node-debug.startWithStopOnEntry",
    "key": "f10",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "command": "-extension.node-debug.startWithStopOnEntry",
    "key": "f11",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "command": "-workbench.action.debug.run",
    "key": "ctrl+f5",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "command": "-workbench.action.debug.stepInto",
    "key": "f11",
    "when": "debugState != 'inactive'"
  },
  {
    "command": "-workbench.action.debug.stepOut",
    "key": "shift+f11",
    "when": "debugState == 'stopped'"
  },
  {
    "command": "-workbench.action.debug.stepOver",
    "key": "f10",
    "when": "debugState == 'stopped'"
  },
  {
    "command": "-workbench.action.debug.stop",
    "key": "shift+f5",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "command": "-editor.debug.action.toggleBreakpoint",
    "key": "f9",
    "when": "debuggersAvailable && editorTextFocus"
  },
  {
    "command": "-deleteAllLeft",
    "key": "cmd+backspace",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-deleteAllRight",
    "key": "cmd+delete",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-deleteAllRight",
    "key": "ctrl+k",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.deleteLines",
    "key": "shift+cmd+k",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.reloadWindow",
    "key": "cmd+r",
    "when": "isDevelopment"
  },
  {
    "command": "workbench.action.reloadWindow",
    "key": "shift+cmd+r",
    "when": ""
  },
  {
    "command": "-workbench.action.toggleDevTools",
    "key": "alt+cmd+i",
    "when": "isDevelopment"
  },
  {
    "command": "-editor.emmet.action.expandAbbreviation",
    "key": "tab",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "command": "-emojisense.quickEmojitext",
    "key": "shift+cmd+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-emojisense.quickEmojitextTerminal",
    "key": "shift+cmd+i",
    "when": "terminalFocus"
  },
  {
    "command": "-emojisense.quickEmoji",
    "key": "cmd+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-emojisense.quickEmojiTerminal",
    "key": "cmd+i",
    "when": "terminalFocus"
  },
  {
    "command": "-editor.action.smartSelect.expand",
    "key": "ctrl+shift+cmd+right",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.files.action.focusOpenEditorsView",
    "key": "cmd+k e",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "command": "-workbench.files.action.compareWithClipboard",
    "key": "cmd+k c"
  },
  {
    "command": "-workbench.files.action.compareWithSaved",
    "key": "cmd+k d"
  },
  {
    "command": "-copyFilePath",
    "key": "alt+cmd+c",
    "when": "!editorFocus"
  },
  {
    "command": "-copyRelativeFilePath",
    "key": "shift+alt+cmd+c",
    "when": "!editorFocus"
  },
  {
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "key": "cmd+k o",
    "when": "emptyWorkspaceSupport"
  },
  {
    "command": "-workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "-workbench.action.files.openFileFolder",
    "key": "cmd+o"
  },
  {
    "command": "-revealFileInOS",
    "key": "alt+cmd+r",
    "when": "!editorFocus"
  },
  {
    "command": "-workbench.action.files.saveAs",
    "key": "shift+cmd+s"
  },
  {
    "command": "-workbench.action.files.saveWithoutFormatting",
    "key": "cmd+k s"
  },
  {
    "command": "-editor.action.nextSelectionMatchFindAction",
    "key": "cmd+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousSelectionMatchFindAction",
    "key": "shift+cmd+f3",
    "when": "editorFocus"
  },
  {
    "command": "-actions.findWithSelection",
    "key": "cmd+e"
  },
  {
    "command": "-foam-vscode.open-daily-note",
    "key": "alt+d"
  },
  {
    "command": "-breadcrumbs.focusAndSelect",
    "key": "shift+cmd+.",
    "when": "breadcrumbsPossible"
  },
  {
    "command": "-editor.fold",
    "key": "alt+cmd+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAll",
    "key": "cmd+k cmd+0",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllBlockComments",
    "key": "cmd+k cmd+/",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllMarkerRegions",
    "key": "cmd+k cmd+8",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllExcept",
    "key": "cmd+k cmd+-",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel1",
    "key": "cmd+k cmd+1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel2",
    "key": "cmd+k cmd+2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel3",
    "key": "cmd+k cmd+3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel4",
    "key": "cmd+k cmd+4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel5",
    "key": "cmd+k cmd+5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel6",
    "key": "cmd+k cmd+6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel7",
    "key": "cmd+k cmd+7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldRecursively",
    "key": "cmd+k cmd+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-notebook.formatCell",
    "key": "shift+alt+f",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-editor.action.formatDocument",
    "key": "shift+alt+f",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "command": "-editor.action.formatDocument.none",
    "key": "shift+alt+f",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "command": "-editor.action.formatSelection",
    "key": "cmd+k cmd+f",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-gettingStarted.goBack",
    "key": "escape",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "-gettingStarted.next",
    "key": "right",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "-gettingStarted.prev",
    "key": "left",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "-gettingStarted.prev",
    "key": "up",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "-git.revertSelectedRanges",
    "key": "cmd+k cmd+r",
    "when": "isInDiffEditor"
  },
  {
    "command": "-git.stageSelectedRanges",
    "key": "cmd+k alt+cmd+s",
    "when": "isInDiffEditor"
  },
  {
    "command": "-git.unstageSelectedRanges",
    "key": "cmd+k cmd+n",
    "when": "isInDiffEditor"
  },
  {
    "command": "-workbench.action.navigateBack",
    "key": "ctrl+-"
  },
  {
    "command": "-workbench.action.navigateForward",
    "key": "ctrl+shift+-"
  },
  {
    "command": "-editor.action.jumpToBracket",
    "key": "shift+cmd+\\",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.goToImplementation",
    "key": "cmd+f12",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-workbench.action.navigateToLastEditLocation",
    "key": "cmd+k cmd+q"
  },
  {
    "command": "-workbench.action.gotoLine",
    "key": "ctrl+g"
  },
  {
    "command": "-editor.action.diffReview.next",
    "key": "f7",
    "when": "isInDiffEditor"
  },
  {
    "command": "-editor.action.marker.next",
    "key": "alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.nextInFiles",
    "key": "f8",
    "when": "editorFocus"
  },
  {
    "command": "-references-view.next",
    "key": "f4",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "command": "-editor.action.wordHighlight.next",
    "key": "f7",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "command": "-editor.action.diffReview.prev",
    "key": "shift+f7",
    "when": "isInDiffEditor"
  },
  {
    "command": "-editor.action.marker.prev",
    "key": "shift+alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.prevInFiles",
    "key": "shift+f8",
    "when": "editorFocus"
  },
  {
    "command": "-references-view.prev",
    "key": "shift+f4",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "command": "-editor.action.wordHighlight.prev",
    "key": "shift+f7",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "command": "-editor.action.goToReferences",
    "key": "shift+f12",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "cmd+t"
  },
  {
    "command": "-workbench.action.hideInterfaceOverview",
    "key": "escape",
    "when": "interfaceOverviewVisible"
  },
  {
    "command": "-workbench.action.keybindingsReference",
    "key": "cmd+k cmd+r"
  },
  {
    "command": "-editor.action.indentLines",
    "key": "cmd+]",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-guid.insert",
    "key": "shift+cmd+[",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.insertLineBefore",
    "key": "shift+cmd+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.insertLineAfter",
    "key": "cmd+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-guid.insertMany",
    "key": "shift+alt+cmd+[",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.joinLines",
    "key": "ctrl+j",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-markdown.showPreview",
    "key": "shift+cmd+v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-markdown.showPreviewToSide",
    "key": "cmd+k v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "key": "cmd+k cmd+d",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.moveLinesDownAction",
    "key": "alt+down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.moveLinesUpAction",
    "key": "alt+up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.editor.nextChange",
    "key": "alt+f5",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.editor.previousChange",
    "key": "shift+alt+f5",
    "when": "editorTextFocus"
  },
  {
    "command": "-notebook.centerActiveCell",
    "key": "ctrl+l",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.changeToCode",
    "key": "y",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markdown'"
  },
  {
    "command": "-notebook.cell.changeToMarkdown",
    "key": "m",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "command": "-notebook.cell.clearOutputs",
    "key": "alt+delete",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.collapseCellInput",
    "key": "cmd+k cmd+c",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "command": "-notebook.cell.collapseCellOutput",
    "key": "cmd+k t",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.cell.copyDown",
    "key": "shift+alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.copyUp",
    "key": "shift+alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.delete",
    "key": "cmd+backspace",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.edit",
    "key": "enter",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.execute",
    "key": "ctrl+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markdown' || notebookCellListFocused && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "-notebook.cell.executeAndInsertBelow",
    "key": "alt+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markdown' || notebookCellListFocused && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "-notebook.cell.expandCellInput",
    "key": "cmd+k cmd+c",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "command": "-notebook.cell.expandCellOutput",
    "key": "cmd+k t",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.focusTop",
    "key": "cmd+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.focusInOutput",
    "key": "ctrl+cmd+down",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "command": "-notebook.focusBottom",
    "key": "cmd+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "ctrl+cmd+down",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "-notebook.cell.focusOutOutput",
    "key": "ctrl+cmd+up",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "up",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "command": "-notebook.fold",
    "key": "left",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.fold",
    "key": "alt+cmd+[",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.format",
    "key": "shift+alt+f",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.cell.insertCodeCellAbove",
    "key": "shift+cmd+enter",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.insertCodeCellBelow",
    "key": "cmd+enter",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.joinBelow",
    "key": "ctrl+alt+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.joinAbove",
    "key": "ctrl+shift+alt+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.moveDown",
    "key": "alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.moveUp",
    "key": "alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.pasteAbove",
    "key": "shift+cmd+v",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.split",
    "key": "cmd+k shift+cmd+\\",
    "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.quitEdit",
    "key": "escape",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },
  {
    "command": "-notebook.unfold",
    "key": "right",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.unfold",
    "key": "alt+cmd+]",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notifications.hideList",
    "key": "escape",
    "when": "notificationCenterVisible"
  },
  {
    "command": "-editor.action.revealDefinitionAside",
    "key": "cmd+k f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "shift+cmd+c",
    "when": "!terminalFocus"
  },
  {
    "command": "-editor.action.organizeImports",
    "key": "shift+alt+o",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "command": "-editor.action.outdentLines",
    "key": "cmd+[",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.peekDefinition",
    "key": "alt+f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.peekImplementation",
    "key": "shift+cmd+f12",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-settings.action.clearSearchResults",
    "key": "escape",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "command": "-workbench.action.selectTheme",
    "key": "cmd+k cmd+t"
  },
  {
    "command": "-settings.action.search",
    "key": "cmd+f",
    "when": "inSettingsEditor"
  },
  {
    "command": "-settings.action.focusTOC",
    "key": "left",
    "when": "inSettingsEditor && settingRowFocus"
  },
  {
    "command": "-workbench.extensions.action.showRecommendedKeymapExtensions",
    "key": "cmd+k cmd+m"
  },
  {
    "command": "-settings.action.focusLevelUp",
    "key": "escape",
    "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
  },
  {
    "command": "-workbench.action.openGlobalKeybindings",
    "key": "cmd+k cmd+s"
  },
  {
    "command": "-settings.action.showContextMenu",
    "key": "shift+f9",
    "when": "inSettingsEditor"
  },
  {
    "command": "-editor.action.quickFix",
    "key": "cmd+.",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-references-view.findReferences",
    "key": "shift+alt+f12",
    "when": "editorHasReferenceProvider"
  },
  {
    "command": "-editor.action.removeCommentLine",
    "key": "cmd+k cmd+u",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.rename",
    "key": "f2",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-repl.action.acceptInput",
    "key": "enter",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "command": "-repl.action.filter",
    "key": "cmd+f",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "command": "-editor.action.startFindReplaceAction",
    "key": "alt+cmd+f",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "editor.action.startFindReplaceAction",
    "key": "cmd+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "-editor.action.inPlaceReplace.down",
    "key": "shift+cmd+.",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.inPlaceReplace.up",
    "key": "shift+cmd+,",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-decreaseSearchEditorContextLines",
    "key": "alt+-",
    "when": "inSearchEditor"
  },
  {
    "command": "-search.searchEditor.action.deleteFileResults",
    "key": "shift+cmd+backspace",
    "when": "inSearchEditor"
  },
  {
    "command": "-search.action.focusQueryEditorWidget",
    "key": "escape",
    "when": "inSearchEditor"
  },
  {
    "command": "-increaseSearchEditorContextLines",
    "key": "alt+=",
    "when": "inSearchEditor"
  },
  {
    "command": "-notebook.cell.executeAndSelectBelow",
    "key": "shift+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markdown' || notebookCellListFocused && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "-editor.action.refactor",
    "key": "ctrl+shift+r",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-search.action.openInEditor",
    "key": "cmd+enter",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "command": "-rerunSearchEditorSearch",
    "key": "shift+cmd+r",
    "when": "inSearchEditor"
  },
  {
    "command": "-selectAllSearchEditorMatches",
    "key": "shift+cmd+l",
    "when": "inSearchEditor"
  },
  {
    "command": "-toggleSearchEditorContextLines",
    "key": "alt+cmd+l",
    "when": "inSearchEditor"
  },
  {
    "command": "-toggleSearchEditorCaseSensitive",
    "key": "alt+cmd+c",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-toggleSearchEditorWholeWord",
    "key": "alt+cmd+w",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-toggleSearchEditorRegex",
    "key": "alt+cmd+r",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-search.action.cancel",
    "key": "escape",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "shift+cmd+h"
  },
  {
    "command": "-search.action.focusNextSearchResult",
    "key": "f4",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-search.action.focusPreviousSearchResult",
    "key": "shift+f4",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-editor.action.selectHighlights",
    "key": "shift+cmd+l",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.selectFromAnchorToCursor",
    "key": "cmd+k cmd+k",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "command": "-workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "-editor.action.setSelectionAnchor",
    "key": "cmd+k cmd+b",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.showAccessibilityHelp",
    "key": "alt+f1"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "f1"
  },
  {
    "command": "-editor.action.showContextMenu",
    "key": "shift+f10",
    "when": "textInputFocus"
  },
  {
    "command": "-editor.action.showHover",
    "key": "cmd+k cmd+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.dirtydiff.next",
    "key": "alt+f3",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.dirtydiff.previous",
    "key": "shift+alt+f3",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.smartSelect.shrink",
    "key": "ctrl+shift+cmd+left",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.linkedEditing",
    "key": "shift+cmd+f2",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.switchWindow",
    "key": "ctrl+w"
  },
  {
    "command": "-workbench.action.tasks.build",
    "key": "shift+cmd+b"
  },
  {
    "command": "-workbench.action.terminal.clear",
    "key": "cmd+k",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.clearSelection",
    "key": "escape",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "command": "-workbench.action.terminal.copySelection",
    "key": "cmd+c",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && terminalTextSelected"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.navigationModeExit",
    "key": "escape",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "f3",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "cmd+g",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "shift+enter",
    "when": "terminalFindFocused && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "shift+f3",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "shift+cmd+g",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "enter",
    "when": "terminalFindFocused && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusFind",
    "key": "cmd+f",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "key": "cmd+down",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+cmd+down",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+cmd+right",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNext",
    "key": "shift+cmd+]",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.navigationModeFocusPrevious",
    "key": "cmd+up",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+cmd+up",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+cmd+left",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPrevious",
    "key": "shift+cmd+[",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusTabs",
    "key": "shift+cmd+\\",
    "when": "terminalFocus && terminalProcessSupported || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.hideFind",
    "key": "shift+escape",
    "when": "terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.hideFind",
    "key": "escape",
    "when": "terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.paste",
    "key": "cmd+v",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.resizePaneDown",
    "key": "ctrl+cmd+down",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.resizePaneLeft",
    "key": "ctrl+cmd+left",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.resizePaneRight",
    "key": "ctrl+cmd+right",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.resizePaneUp",
    "key": "ctrl+cmd+up",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.scrollDown",
    "key": "alt+cmd+pagedown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.scrollDownPage",
    "key": "pagedown",
    "when": "terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.scrollToBottom",
    "key": "cmd+end",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "key": "cmd+down",
    "when": "terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "key": "cmd+up",
    "when": "terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "-workbench.action.terminal.scrollToTop",
    "key": "cmd+home",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.scrollUp",
    "key": "alt+cmd+pageup",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.scrollUpPage",
    "key": "pageup",
    "when": "terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.searchWorkspace",
    "key": "shift+cmd+f",
    "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
  },
  {
    "command": "-workbench.action.terminal.selectAll",
    "key": "cmd+a",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.selectToNextCommand",
    "key": "shift+cmd+down",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.selectToPreviousCommand",
    "key": "shift+cmd+up",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "ctrl+shift+5",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "cmd+\\",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "key": "alt+cmd+c",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.toggleFindRegex",
    "key": "alt+cmd+r",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "key": "alt+cmd+w",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-editor.action.blockComment",
    "key": "shift+alt+a",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.toggleFold",
    "key": "cmd+k cmd+l",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.toggleTabFocusMode",
    "key": "ctrl+shift+m"
  },
  {
    "command": "-workbench.action.toggleEditorGroupLayout",
    "key": "alt+cmd+0"
  },
  {
    "command": "-editor.action.transposeLetters",
    "key": "ctrl+t",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.triggerParameterHints",
    "key": "shift+cmd+space",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "cmd+i",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "alt+escape",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+space",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.trimTrailingWhitespace",
    "key": "cmd+k cmd+x",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.unfold",
    "key": "alt+cmd+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAll",
    "key": "cmd+k cmd+j",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllMarkerRegions",
    "key": "cmd+k cmd+9",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllExcept",
    "key": "cmd+k cmd+=",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldRecursively",
    "key": "cmd+k cmd+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-workbench.action.closeAllGroups",
    "key": "cmd+k shift+cmd+w"
  },
  {
    "command": "-workbench.action.closeAllEditors",
    "key": "cmd+k cmd+w"
  },
  {
    "command": "-workbench.action.closeEditorsInGroup",
    "key": "cmd+k w"
  },
  {
    "command": "-workbench.action.closeOtherEditors",
    "key": "alt+cmd+t"
  },
  {
    "command": "-workbench.action.closeUnmodifiedEditors",
    "key": "cmd+k u"
  },
  {
    "command": "-workbench.action.focusAboveGroup",
    "key": "cmd+k cmd+up"
  },
  {
    "command": "-workbench.action.focusBelowGroup",
    "key": "cmd+k cmd+down"
  },
  {
    "command": "-workbench.action.focusFirstEditorGroup",
    "key": "cmd+1"
  },
  {
    "command": "-workbench.action.focusSideBar",
    "key": "cmd+0"
  },
  {
    "command": "-workbench.action.focusLeftGroup",
    "key": "cmd+k cmd+left"
  },
  {
    "command": "-workbench.action.focusNextPart",
    "key": "f6"
  },
  {
    "command": "-workbench.action.focusPreviousPart",
    "key": "shift+f6"
  },
  {
    "command": "-workbench.action.focusRightGroup",
    "key": "cmd+k cmd+right"
  },
  {
    "command": "-workbench.action.keepEditor",
    "key": "cmd+k enter"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupDown",
    "key": "cmd+k down"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupLeft",
    "key": "cmd+k left"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupRight",
    "key": "cmd+k right"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupUp",
    "key": "cmd+k up"
  },
  {
    "command": "-workbench.action.moveEditorToFirstGroup",
    "key": "ctrl+cmd+1"
  },
  {
    "command": "-workbench.action.moveEditorToLastGroup",
    "key": "ctrl+cmd+9"
  },
  {
    "command": "-workbench.action.moveEditorToNextGroup",
    "key": "ctrl+cmd+right"
  },
  {
    "command": "-workbench.action.moveEditorToPreviousGroup",
    "key": "ctrl+cmd+left"
  },
  {
    "command": "-workbench.action.moveEditorLeftInGroup",
    "key": "cmd+k shift+cmd+left"
  },
  {
    "command": "-workbench.action.moveEditorRightInGroup",
    "key": "cmd+k shift+cmd+right"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "cmd+9"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "ctrl+0"
  },
  {
    "command": "-workbench.action.nextEditor",
    "key": "alt+cmd+right"
  },
  {
    "command": "-workbench.action.nextEditorInGroup",
    "key": "cmd+k alt+cmd+right"
  },
  {
    "command": "-workbench.action.previousEditor",
    "key": "alt+cmd+left"
  },
  {
    "command": "-workbench.action.previousEditorInGroup",
    "key": "cmd+k alt+cmd+left"
  },
  {
    "command": "-workbench.action.pinEditor",
    "key": "cmd+k shift+enter",
    "when": "!activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "key": "ctrl+shift+tab"
  },
  {
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "key": "ctrl+tab"
  },
  {
    "command": "-workbench.action.quickOpenView",
    "key": "ctrl+q"
  },
  {
    "command": "-workbench.action.zoomReset",
    "key": "cmd+numpad0"
  },
  {
    "command": "-workbench.action.showAllEditors",
    "key": "alt+cmd+tab"
  },
  {
    "command": "-workbench.view.debug",
    "key": "shift+cmd+d",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "command": "-workbench.view.search",
    "key": "shift+cmd+f",
    "when": "workbench.view.search.active"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "-workbench.action.splitEditor",
    "key": "cmd+\\"
  },
  {
    "command": "workbench.action.splitEditor",
    "key": "alt+s"
  },
  {
    "command": "-workbench.action.splitEditorOrthogonal",
    "key": "cmd+k cmd+\\"
  },
  {
    "command": "-workbench.debug.action.toggleRepl",
    "key": "shift+cmd+y",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "command": "-workbench.action.toggleFullScreen",
    "key": "ctrl+cmd+f"
  },
  {
    "command": "-workbench.action.output.toggleOutput",
    "key": "shift+cmd+u",
    "when": "workbench.panel.output.active"
  },
  {
    "command": "-workbench.action.togglePanel",
    "key": "cmd+j"
  },
  {
    "command": "-workbench.actions.view.problems",
    "key": "shift+cmd+m",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "cmd+b"
  },
  {
    "command": "-workbench.action.toggleTabsVisibility",
    "key": "ctrl+cmd+w"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  {
    "command": "-editor.action.toggleWordWrap",
    "key": "alt+z"
  },
  {
    "command": "-workbench.action.toggleZenMode",
    "key": "cmd+k z"
  },
  {
    "command": "workbench.action.toggleZenMode",
    "key": "alt+z"
  },
  {
    "command": "-workbench.action.unpinEditor",
    "key": "cmd+k shift+enter",
    "when": "activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "cmd+numpad_add"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "shift+cmd+="
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "cmd+="
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "cmd+numpad_subtract"
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "shift+cmd+-"
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "cmd+-"
  },
  {
    "command": "-workbench.action.closeFolder",
    "key": "cmd+k f",
    "when": "emptyWorkspaceSupport"
  },
  {
    "command": "-acceptAlternativeSelectedSuggestion",
    "key": "shift+tab",
    "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  },
  {
    "command": "-acceptAlternativeSelectedSuggestion",
    "key": "shift+enter",
    "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  },
  {
    "command": "-acceptRenameInput",
    "key": "enter",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "command": "-acceptRenameInputWithPreview",
    "key": "shift+enter",
    "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible"
  },
  {
    "command": "-addCursorsAtSearchResults",
    "key": "shift+cmd+l",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-breadcrumbs.focus",
    "key": "shift+cmd+;",
    "when": "breadcrumbsPossible"
  },
  {
    "command": "-breadcrumbs.focusNext",
    "key": "alt+right",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.focusNext",
    "key": "right",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.focusNextWithPicker",
    "key": "alt+right",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "command": "-breadcrumbs.focusPrevious",
    "key": "alt+left",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.focusPrevious",
    "key": "left",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.focusPreviousWithPicker",
    "key": "alt+left",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "command": "-breadcrumbs.revealFocused",
    "key": "cmd+enter",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.revealFocused",
    "key": "space",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.revealFocusedFromTreeAside",
    "key": "cmd+enter",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "command": "-breadcrumbs.selectEditor",
    "key": "escape",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.selectFocused",
    "key": "enter",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-breadcrumbs.toggleToOn",
    "key": "shift+cmd+.",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "command": "-breakpointWidget.action.acceptInput",
    "key": "enter",
    "when": "breakpointWidgetVisible && inBreakpointWidget"
  },
  {
    "command": "-cancelLinkedEditingInput",
    "key": "shift+escape",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "command": "-cancelLinkedEditingInput",
    "key": "escape",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "command": "-cancelRenameInput",
    "key": "shift+escape",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "command": "-cancelRenameInput",
    "key": "escape",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "command": "-cancelSelection",
    "key": "shift+escape",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "command": "-closeAccessibilityHelp",
    "key": "shift+escape",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "command": "-closeAccessibilityHelp",
    "key": "escape",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "command": "-closeBreakpointWidget",
    "key": "shift+escape",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "command": "-closeBreakpointWidget",
    "key": "escape",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "command": "-closeDirtyDiff",
    "key": "shift+escape",
    "when": "dirtyDiffVisible"
  },
  {
    "command": "-closeDirtyDiff",
    "key": "escape",
    "when": "dirtyDiffVisible"
  },
  {
    "command": "-closeFindWidget",
    "key": "shift+escape",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "command": "-closeMarkersNavigation",
    "key": "shift+escape",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "command": "-closeMarkersNavigation",
    "key": "escape",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "command": "-closeParameterHints",
    "key": "shift+escape",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "command": "-closeParameterHints",
    "key": "escape",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "command": "-closeReferenceSearch",
    "key": "shift+escape",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "command": "-closeReferenceSearch",
    "key": "escape",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "command": "-closeReferenceSearch",
    "key": "shift+escape",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "command": "-closeReferenceSearch",
    "key": "escape",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "command": "-closeReplaceInFilesWidget",
    "key": "escape",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "command": "-cursorColumnSelectDown",
    "key": "shift+alt+cmd+down",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectDown",
    "key": "shift+down",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorColumnSelectLeft",
    "key": "shift+alt+cmd+left",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectLeft",
    "key": "shift+left",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorColumnSelectPageDown",
    "key": "shift+alt+cmd+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectPageDown",
    "key": "shift+pagedown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorColumnSelectPageUp",
    "key": "shift+alt+cmd+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectPageUp",
    "key": "shift+pageup",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorColumnSelectRight",
    "key": "shift+alt+cmd+right",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectRight",
    "key": "shift+right",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorColumnSelectUp",
    "key": "shift+alt+cmd+up",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorColumnSelectUp",
    "key": "shift+up",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "-cursorDown",
    "key": "ctrl+n",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorLeft",
    "key": "ctrl+b",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorLineEnd",
    "key": "ctrl+e",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorLineEndSelect",
    "key": "ctrl+shift+e",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorLineStart",
    "key": "ctrl+a",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorLineStartSelect",
    "key": "ctrl+shift+a",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorRight",
    "key": "ctrl+f",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorUp",
    "key": "ctrl+p",
    "when": "textInputFocus"
  },
  {
    "command": "-debug.openBreakpointToSide",
    "key": "alt+enter",
    "when": "breakpointsFocused"
  },
  {
    "command": "-debug.openBreakpointToSide",
    "key": "cmd+enter",
    "when": "breakpointsFocused"
  },
  {
    "command": "-debug.removeBreakpoint",
    "key": "cmd+backspace",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  {
    "command": "-debug.removeWatchExpression",
    "key": "cmd+backspace",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "command": "-debug.renameWatchExpression",
    "key": "enter",
    "when": "watchExpressionsFocused"
  },
  {
    "command": "-debug.setVariable",
    "key": "enter",
    "when": "variablesFocused"
  },
  {
    "command": "-debug.toggleBreakpoint",
    "key": "space",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "command": "-deleteFile",
    "key": "alt+cmd+backspace",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-deleteFile",
    "key": "cmd+backspace",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-editor.action.defineKeybinding",
    "key": "cmd+k cmd+k",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
  },
  {
    "command": "-editor.action.extensioneditor.findNext",
    "key": "enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "-editor.action.extensioneditor.findPrevious",
    "key": "shift+enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "-editor.action.extensioneditor.showfind",
    "key": "cmd+f",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "-editor.action.replaceAll",
    "key": "alt+cmd+enter",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "-editor.action.replaceOne",
    "key": "shift+cmd+1",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "-editor.action.selectAllMatches",
    "key": "alt+enter",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "-editor.action.webvieweditor.findNext",
    "key": "enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "-editor.action.webvieweditor.findPrevious",
    "key": "shift+enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "-editor.action.webvieweditor.hideFind",
    "key": "escape",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "-deleteLeft",
    "key": "ctrl+h",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteLeft",
    "key": "shift+backspace",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteRight",
    "key": "ctrl+d",
    "when": "textInputFocus"
  },
  {
    "command": "-filesExplorer.copy",
    "key": "cmd+c",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "-filesExplorer.cut",
    "key": "cmd+x",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "-filesExplorer.findInFolder",
    "key": "shift+alt+f",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "-filesExplorer.openFilePreserveFocus",
    "key": "space",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "-filesExplorer.paste",
    "key": "cmd+v",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-firstCompressedFolder",
    "key": "home",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "-goToNextReference",
    "key": "f12",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-goToNextReference",
    "key": "f4",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-goToPreviousReference",
    "key": "shift+f12",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-goToPreviousReference",
    "key": "shift+f4",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-hideSuggestWidget",
    "key": "shift+escape",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-history.showNext",
    "key": "alt+down",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "command": "-history.showPrevious",
    "key": "alt+up",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "command": "-history.showPrevious",
    "key": "up",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "command": "-insertBestCompletion",
    "key": "tab",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "-insertNextSuggestion",
    "key": "tab",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "-insertPrevSuggestion",
    "key": "shift+tab",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "-insertSnippet",
    "key": "tab",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "command": "-jumpToPrevSnippetPlaceholder",
    "key": "shift+tab",
    "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
  },
  {
    "command": "-keybindings.editor.addKeybinding",
    "key": "cmd+k cmd+a",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "command": "-keybindings.editor.recordSearchKeys",
    "key": "alt+cmd+k",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "-list.focusFirst",
    "key": "home",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusLast",
    "key": "end",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusPageDown",
    "key": "pagedown",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusPageUp",
    "key": "pageup",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusUp",
    "key": "ctrl+p",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.scrollDown",
    "key": "cmd+down",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.scrollUp",
    "key": "cmd+up",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.select",
    "key": "cmd+down",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.select",
    "key": "enter",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.selectAll",
    "key": "cmd+a",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "-list.toggleExpand",
    "key": "space",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.toggleSelection",
    "key": "shift+cmd+enter",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-moveFileToTrash",
    "key": "delete",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-moveFileToTrash",
    "key": "cmd+backspace",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-nextCompressedFolder",
    "key": "right",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "-notebook.find",
    "key": "cmd+f",
    "when": "notebookEditorFocused || !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.hideFind",
    "key": "escape",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "command": "-notification.clear",
    "key": "cmd+backspace",
    "when": "notificationFocus"
  },
  {
    "command": "-notification.collapse",
    "key": "left",
    "when": "notificationFocus"
  },
  {
    "command": "-notification.expand",
    "key": "right",
    "when": "notificationFocus"
  },
  {
    "command": "-notification.toggle",
    "key": "enter",
    "when": "notificationFocus"
  },
  {
    "command": "-notification.toggle",
    "key": "space",
    "when": "notificationFocus"
  },
  {
    "command": "-notifications.focusFirstToast",
    "key": "home",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-notifications.focusFirstToast",
    "key": "pageup",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-notifications.focusLastToast",
    "key": "end",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-notifications.focusLastToast",
    "key": "pagedown",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-notifications.focusPreviousToast",
    "key": "up",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-notifications.hideToasts",
    "key": "escape",
    "when": "notificationToastsVisible"
  },
  {
    "command": "-notifications.hideToasts",
    "key": "escape",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-openReferenceToSide",
    "key": "ctrl+enter",
    "when": "listFocus && referenceSearchVisible && !inputFocus"
  },
  {
    "command": "-previousCompressedFolder",
    "key": "left",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "-problems.action.copy",
    "key": "cmd+c",
    "when": "problemFocus"
  },
  {
    "command": "-problems.action.focusFilter",
    "key": "cmd+f",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "command": "-problems.action.focusProblemsFromFilter",
    "key": "cmd+down",
    "when": "problemsFilterFocus"
  },
  {
    "command": "-problems.action.open",
    "key": "cmd+down",
    "when": "problemFocus"
  },
  {
    "command": "-problems.action.open",
    "key": "enter",
    "when": "problemFocus"
  },
  {
    "command": "-problems.action.openToSide",
    "key": "ctrl+enter",
    "when": "problemFocus"
  },
  {
    "command": "-problems.action.showQuickFixes",
    "key": "cmd+.",
    "when": "problemFocus"
  },
  {
    "command": "-refactorPreview.apply",
    "key": "shift+enter",
    "when": "refactorPreview.enabled && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
  },
  {
    "command": "-refactorPreview.toggleCheckedState",
    "key": "space",
    "when": "listFocus && refactorPreview.enabled && !inputFocus"
  },
  {
    "command": "-remote.tunnel.closeInline",
    "key": "delete",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "command": "-remote.tunnel.closeInline",
    "key": "cmd+backspace",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "command": "-remote.tunnel.copyAddressInline",
    "key": "cmd+c",
    "when": "tunnelViewFocus && tunnelType == 'Detected' || tunnelViewFocus && tunnelType == 'Forwarded'"
  },
  {
    "command": "-remote.tunnel.label",
    "key": "enter",
    "when": "tunnelViewFocus && tunnelType == 'Forwarded'"
  },
  {
    "command": "-removeSecondaryCursors",
    "key": "shift+escape",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "command": "-revealReference",
    "key": "cmd+down",
    "when": "listFocus && referenceSearchVisible && !inputFocus"
  },
  {
    "command": "-revealReference",
    "key": "enter",
    "when": "listFocus && referenceSearchVisible && !inputFocus"
  },
  {
    "command": "-saveAll",
    "key": "alt+cmd+s"
  },
  {
    "command": "-scm.acceptInput",
    "key": "cmd+enter",
    "when": "scmRepository"
  },
  {
    "command": "-scm.forceViewNextCommit",
    "key": "alt+down",
    "when": "scmRepository"
  },
  {
    "command": "-scm.forceViewPreviousCommit",
    "key": "alt+up",
    "when": "scmRepository"
  },
  {
    "command": "-scm.viewPreviousCommit",
    "key": "up",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "-scrollLineDown",
    "key": "ctrl+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "-scrollLineUp",
    "key": "ctrl+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "-scrollPageDown",
    "key": "cmd+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "-scrollPageUp",
    "key": "cmd+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "-search.action.copyMatch",
    "key": "cmd+c",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "command": "-search.action.copyPath",
    "key": "alt+cmd+c",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "command": "-search.action.focusSearchFromResults",
    "key": "cmd+up",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "command": "-workbench.action.quickInputBack",
    "key": "ctrl+-",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "key": "ctrl+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "key": "ctrl+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "key": "ctrl+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "key": "ctrl+shift+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "shift+cmd+p",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "key": "ctrl+shift+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "key": "ctrl+shift+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "-workbench.action.quit",
    "key": "cmd+q"
  },
  {
    "command": "-workbench.action.search.toggleQueryDetails",
    "key": "shift+cmd+j",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "command": "-workbench.action.submitComment",
    "key": "cmd+enter",
    "when": "commentEditorFocused"
  },
  {
    "command": "-workbench.action.terminal.killInstance",
    "key": "delete",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.killInstance",
    "key": "cmd+backspace",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.renameInstance",
    "key": "enter",
    "when": "terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "alt+backspace",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "alt+delete",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "cmd+backspace",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "cmd+left",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "cmd+right",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.splitInstance",
    "key": "ctrl+shift+5",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.splitInstance",
    "key": "cmd+\\",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.statusBar.clearFocus",
    "key": "escape",
    "when": "statusBarFocused"
  },
  {
    "command": "-workbench.statusBar.focusFirst",
    "key": "home",
    "when": "statusBarFocused"
  },
  {
    "command": "-workbench.statusBar.focusLast",
    "key": "end",
    "when": "statusBarFocused"
  },
  {
    "command": "-workbench.statusBar.focusNext",
    "key": "right",
    "when": "statusBarFocused"
  },
  {
    "command": "-workbench.statusBar.focusPrevious",
    "key": "up",
    "when": "statusBarFocused"
  },
  {
    "command": "-workbench.statusBar.focusPrevious",
    "key": "left",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.action.openEditorAtIndex1",
    "key": "cmd+1"
  },
  {
    "command": "-workbench.action.openEditorAtIndex1",
    "key": "ctrl+1"
  },
  {
    "command": "workbench.action.openEditorAtIndex2",
    "key": "cmd+2"
  },
  {
    "command": "-workbench.action.openEditorAtIndex2",
    "key": "ctrl+2"
  },
  {
    "command": "workbench.action.openEditorAtIndex3",
    "key": "cmd+3"
  },
  {
    "command": "-workbench.action.openEditorAtIndex3",
    "key": "ctrl+3"
  },
  {
    "command": "workbench.action.openEditorAtIndex4",
    "key": "cmd+4"
  },
  {
    "command": "-workbench.action.openEditorAtIndex4",
    "key": "ctrl+4"
  },
  {
    "command": "workbench.action.openEditorAtIndex5",
    "key": "cmd+5"
  },
  {
    "command": "-workbench.action.openEditorAtIndex5",
    "key": "ctrl+5"
  },
  {
    "command": "workbench.action.openEditorAtIndex6",
    "key": "cmd+6"
  },
  {
    "command": "-workbench.action.openEditorAtIndex6",
    "key": "ctrl+6"
  },
  {
    "command": "workbench.action.openEditorAtIndex7",
    "key": "cmd+7"
  },
  {
    "command": "-workbench.action.openEditorAtIndex7",
    "key": "ctrl+7"
  },
  {
    "command": "workbench.action.openEditorAtIndex8",
    "key": "cmd+8"
  },
  {
    "command": "-workbench.action.openEditorAtIndex8",
    "key": "ctrl+8"
  },
  {
    "command": "workbench.action.openEditorAtIndex9",
    "key": "cmd+9"
  },
  {
    "command": "-workbench.action.openEditorAtIndex9",
    "key": "ctrl+9"
  },
  {
    "command": "-list.clear",
    "key": "escape",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
  },
  {
    "command": "-list.collapse",
    "key": "cmd+up",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.collapse",
    "key": "left",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.collapseAll",
    "key": "shift+cmd+up",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.collapseAll",
    "key": "cmd+left",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.expand",
    "key": "right",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.expandSelectionDown",
    "key": "shift+down",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "-list.expandSelectionUp",
    "key": "shift+up",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "-list.focusDown",
    "key": "ctrl+n",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-testing.editFocusedTest",
    "key": "alt+enter",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "command": "-toggleExplainMode",
    "key": "cmd+/",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "-toggleFindCaseSensitive",
    "key": "alt+cmd+c",
    "when": "editorFocus"
  },
  {
    "command": "-toggleFindInSelection",
    "key": "alt+cmd+l",
    "when": "editorFocus"
  },
  {
    "command": "-toggleFindRegex",
    "key": "alt+cmd+r",
    "when": "editorFocus"
  },
  {
    "command": "-toggleFindWholeWord",
    "key": "alt+cmd+w",
    "when": "editorFocus"
  },
  {
    "command": "-togglePeekWidgetFocus",
    "key": "cmd+k f2",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-togglePreserveCase",
    "key": "alt+cmd+p",
    "when": "editorFocus"
  },
  {
    "command": "-toggleSearchCaseSensitive",
    "key": "alt+cmd+c",
    "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
  },
  {
    "command": "-toggleSearchPreserveCase",
    "key": "alt+cmd+p",
    "when": "searchViewletFocus"
  },
  {
    "command": "-toggleSearchRegex",
    "key": "alt+cmd+r",
    "when": "searchViewletFocus"
  },
  {
    "command": "-toggleSearchWholeWord",
    "key": "alt+cmd+w",
    "when": "searchViewletFocus"
  },
  {
    "command": "-toggleSuggestionDetails",
    "key": "ctrl+space",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-toggleSuggestionFocus",
    "key": "ctrl+alt+space",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-views.moveViewDown",
    "key": "cmd+k down",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewLeft",
    "key": "cmd+k left",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewRight",
    "key": "cmd+k right",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewUp",
    "key": "cmd+k up",
    "when": "focusedView != ''"
  },
  {
    "command": "-workbench.action.closeGroup",
    "key": "cmd+w",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "command": "-workbench.action.closeQuickOpen",
    "key": "shift+escape",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.closeQuickOpen",
    "key": "escape",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.compareEditor.nextChange",
    "key": "alt+f5",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "-workbench.action.compareEditor.previousChange",
    "key": "shift+alt+f5",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "-workbench.action.exitZenMode",
    "key": "escape escape",
    "when": "inZenMode"
  },
  {
    "command": "-workbench.action.files.copyPathOfActiveFile",
    "key": "cmd+k p"
  },
  {
    "command": "-workbench.action.files.openLocalFileFolder",
    "key": "cmd+o",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "-workbench.action.files.revealActiveFileInWindows",
    "key": "cmd+k r"
  },
  {
    "command": "-workbench.action.files.saveLocalFile",
    "key": "shift+cmd+s",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "-workbench.action.focusEighthEditorGroup",
    "key": "cmd+8"
  },
  {
    "command": "-workbench.action.focusFifthEditorGroup",
    "key": "cmd+5"
  },
  {
    "command": "-workbench.action.focusFourthEditorGroup",
    "key": "cmd+4"
  },
  {
    "command": "-workbench.action.focusSecondEditorGroup",
    "key": "cmd+2"
  },
  {
    "command": "-workbench.action.focusSeventhEditorGroup",
    "key": "cmd+7"
  },
  {
    "command": "-workbench.action.focusSixthEditorGroup",
    "key": "cmd+6"
  },
  {
    "command": "-workbench.action.focusThirdEditorGroup",
    "key": "cmd+3"
  },
  {
    "command": "-workbench.action.hideComment",
    "key": "shift+escape",
    "when": "commentEditorFocused"
  },
  {
    "command": "-workbench.action.hideComment",
    "key": "escape",
    "when": "commentEditorFocused"
  },
  {
    "command": "-workbench.action.interactivePlayground.arrowDown",
    "key": "down",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "-workbench.action.interactivePlayground.arrowUp",
    "key": "up",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "-workbench.action.interactivePlayground.pageDown",
    "key": "pagedown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "-workbench.action.interactivePlayground.pageUp",
    "key": "pageup",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "-workbench.statusBar.focusNext",
    "key": "down",
    "when": "statusBarFocused"
  },
  {
    "command": "-showNextParameterHint",
    "key": "ctrl+n",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showNextParameterHint",
    "key": "alt+down",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showNextParameterHint",
    "key": "down",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showPrevParameterHint",
    "key": "ctrl+p",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showPrevParameterHint",
    "key": "alt+up",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showPrevParameterHint",
    "key": "up",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-notifications.focusNextToast",
    "key": "down",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "-scm.viewNextCommit",
    "key": "down",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "-search.action.openResult",
    "key": "cmd+down",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-search.action.openResult",
    "key": "enter",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-search.action.openResultToSide",
    "key": "ctrl+enter",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-search.action.remove",
    "key": "cmd+backspace",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-search.action.replace",
    "key": "shift+cmd+1",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAll",
    "key": "alt+cmd+enter",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "command": "-search.action.replaceAllInFile",
    "key": "shift+cmd+enter",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAllInFile",
    "key": "shift+cmd+1",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAllInFolder",
    "key": "shift+cmd+enter",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAllInFolder",
    "key": "shift+cmd+1",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.focus.nextInputBox",
    "key": "cmd+down",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "command": "-search.focus.previousInputBox",
    "key": "cmd+up",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "command": "-selectNextPageSuggestion",
    "key": "cmd+pagedown",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectNextPageSuggestion",
    "key": "pagedown",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectNextSuggestion",
    "key": "cmd+down",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectPrevPageSuggestion",
    "key": "cmd+pageup",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectPrevPageSuggestion",
    "key": "pageup",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-selectPrevSuggestion",
    "key": "cmd+up",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-settings.action.editFocusedSetting",
    "key": "cmd+.",
    "when": "inSettingsSearch"
  },
  {
    "command": "-settings.action.focusNextSetting",
    "key": "enter",
    "when": "inSettingsSearch"
  },
  {
    "command": "-settings.action.focusPreviousSetting",
    "key": "shift+enter",
    "when": "inSettingsSearch"
  },
  {
    "command": "-settings.action.focusSettingControl",
    "key": "enter",
    "when": "settingRowFocus"
  },
  {
    "command": "-settings.action.focusSettingsFile",
    "key": "down",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "-settings.action.focusSettingsFromSearch",
    "key": "down",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "-settings.action.focusSettingsList",
    "key": "enter",
    "when": "inSettingsEditor && settingsTocRowFocus"
  },
  {
    "command": "-expandLineSelection",
    "key": "cmd+l",
    "when": "textInputFocus"
  },
  {
    "command": "-explorer.openAndPassFocus",
    "key": "cmd+down",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "-explorer.openToSide",
    "key": "ctrl+enter",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "command": "-filesExplorer.cancelCut",
    "key": "escape",
    "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "-history.showNext",
    "key": "down",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "command": "-keybindings.editor.clearSearchResults",
    "key": "escape",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "-keybindings.editor.copyKeybindingEntry",
    "key": "cmd+c",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "command": "-keybindings.editor.defineWhenExpression",
    "key": "cmd+k cmd+e",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "command": "-keybindings.editor.focusKeybindings",
    "key": "cmd+down",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "-keybindings.editor.toggleSortByPrecedence",
    "key": "alt+cmd+p",
    "when": "inKeybindings"
  },
  {
    "command": "-lastCompressedFolder",
    "key": "end",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "-leaveEditorMessage",
    "key": "escape",
    "when": "messageVisible"
  },
  {
    "command": "-leaveSnippet",
    "key": "shift+escape",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "command": "-leaveSnippet",
    "key": "escape",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "command": "-lineBreakInsert",
    "key": "ctrl+o",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.cancelOperation",
    "key": "escape",
    "when": "cancellableOperation"
  },
  {
    "command": "-editor.closeCallHierarchy",
    "key": "escape",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "command": "-editor.closeTestPeek",
    "key": "escape",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "command": "-editor.gotoNextSymbolFromResult",
    "key": "f12",
    "when": "hasSymbols"
  },
  {
    "command": "-editor.gotoNextSymbolFromResult.cancel",
    "key": "escape",
    "when": "hasSymbols"
  },
  {
    "command": "-editor.refocusCallHierarchy",
    "key": "shift+enter",
    "when": "callHierarchyVisible"
  },
  {
    "command": "-editor.showCallHierarchy",
    "key": "shift+alt+h",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "command": "-editor.showIncomingCalls",
    "key": "shift+alt+h",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "command": "-editor.showOutgoingCalls",
    "key": "shift+alt+h",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "command": "-gettingStarted.next",
    "key": "down",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "down",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "command": "-breadcrumbs.selectFocused",
    "key": "down",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-cursorEnd",
    "key": "end",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorEndSelect",
    "key": "shift+end",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorHome",
    "key": "home",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorHomeSelect",
    "key": "shift+home",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorPageDown",
    "key": "pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageDown",
    "key": "alt+down",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorPageDownSelect",
    "key": "shift+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorPageUp",
    "key": "pageup",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageUp",
    "key": "alt+up",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorPageUpSelect",
    "key": "shift+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorWordPartLeft",
    "key": "ctrl+alt+left",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorWordPartLeftSelect",
    "key": "ctrl+shift+alt+left",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorWordPartRight",
    "key": "ctrl+alt+right",
    "when": "textInputFocus"
  },
  {
    "command": "-cursorWordPartRightSelect",
    "key": "ctrl+shift+alt+right",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteLeft",
    "key": "ctrl+backspace",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteRight",
    "key": "ctrl+delete",
    "when": "textInputFocus"
  },
  {
    "command": "deleteRight",
    "key": "ctrl+backspace",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteRight",
    "key": "delete",
    "when": "textInputFocus"
  },
  {
    "command": "-deleteWordPartLeft",
    "key": "ctrl+alt+backspace",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-deleteWordPartRight",
    "key": "ctrl+alt+delete",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-deleteWordRight",
    "key": "alt+delete",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "workbench.action.terminal.clear",
    "key": "cmd+r",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.problems.focus",
    "key": "cmd+i",
    "when": "editorFocus || terminalFocus"
  },
  {
    "command": "workbench.action.gotoLine",
    "key": "cmd+;",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.nextMatchFindAction",
    "key": "f3",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+cmd+up",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.insertCursorAbove",
    "key": "alt+cmd+up",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorBelow",
    "key": "ctrl+cmd+down",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.insertCursorBelow",
    "key": "alt+cmd+down",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.nextMatchFindAction",
    "key": "enter",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+enter",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "command": "search.action.openEditor",
    "key": "shift+cmd+f"
  },
  {
    "command": "-workbench.action.findInFiles",
    "key": "shift+cmd+f"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "shift+cmd+e"
  },
  {
    "command": "-workbench.view.explorer",
    "key": "shift+cmd+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "-extension.applescript.compile",
    "key": "shift+alt+b",
    "when": "editorFocus && editorLangId == 'applescript'"
  },
  {
    "command": "-extension.applescript.run",
    "key": "shift+alt+r",
    "when": "editorFocus && editorLangId == 'applescript'"
  },
  {
    "command": "-notebook.cell.changeToCode",
    "key": "y",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.cell.edit",
    "key": "enter",
    "when": "notebookCellListFocused && notebookEditable && !inputFocus"
  },
  {
    "command": "-notebook.cell.execute",
    "key": "ctrl+enter",
    "when": "notebookCellListFocused && notebookCellType == 'code' && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "-notebook.cell.executeAndSelectBelow",
    "key": "shift+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookCellType == 'code' && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "-notebook.cell.executeAndInsertBelow",
    "key": "alt+enter",
    "when": "notebookCellListFocused && notebookCellType == 'code' && notebookCellExecutionState == 'failed' || notebookCellExecutionState == 'idle' || notebookCellExecutionState == 'succeeded' && notebookKernelCount > 0"
  },
  {
    "command": "workbench.action.togglePanel",
    "key": "cmd+t"
  },
  {
    "command": "-editor.action.smartSelect.shrink",
    "key": "ctrl+shift+left",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.smartSelect.expand",
    "key": "ctrl+shift+right",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.quit",
    "key": "cmd+q"
  },
  {
    "command": "workbench.action.quickSwitchWindow",
    "key": "cmd+`"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "cmd+o"
  }
]
